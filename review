처음에 출력되는 형식을 눈여겨봤어야 했다. 일치하는 인덱스\n 인덱스의 개수로 출력되는건 쉬웠다. 이렇게 출력하는줄 알고 했더니 아니었다. 전혀 다른 구조
그래서 시도한 방식은 1.배열을 사용해서(결과적으로 정답) 2. 반복문을 사용해서 하나씩 출력(이건 문제 의도가 아니었던거 같긴 했다.)
1번 방식을 사용한다면 어떻게 했어야 할까 생각했는데, 먼저 결과값이 저장될 result배열을 만들고 배열의 크기를 미리 고정값으로 정해뒀다.
이렇게 하니까 생긴 문제점은 '0'처럼 남는 부분이 생겨서 출력할때 0들이 모두 출력된다는 것이었다. 이것을 해결하는 방법을 찾지 못해서 족보 참고했다.
정답은 realloc을 활용하는것이었다. 일치하는 인덱스를 만날 때마다 result배열에 값을 할당하고 realloc을 활용하여 result배열의 크기를 하나씩 늘려나가는것이었다.
result = (int*)realloc(result,(index+1)*sizeof(int))다. 그리고 인덱스의 개수는 result[0]에 저장함으로 불필요한 변수 사용을 줄였다.
뻘짓을 너무 많이 해서 시간을 한참 잡아먹었다. 그리고 naive, kmp 알고리즘 자체에 대한 이해보다도 족보를 해석 비교하는데 시간이 더 걸렸던것 같아서 아쉬움이 남는다.
